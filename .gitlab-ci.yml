include:
 - 'https://source.puri.sm/Librem5/librem5-ci/raw/master/librem5-pipeline-definitions.yml'

stages:
 - build
 - test+docs
 - package
 - test-package
 - deploy

variables:
  DEPS: git lcov
  ALPINE_EDGE_DEPS: |
        git meson ninja gnome-desktop-dev gobject-introspection-dev
        libinput-dev wayland-dev wayland-protocols libxkbcommon-dev wlroots-dev
  XVFB_RUN: xvfb-run -s -noreset
  DEBIAN_IMAGE: $CI_REGISTRY/world/phosh/phoc/debian:v0.0.20211205-wlroots0.14.1

.build: &build
  script:
    - export LC_ALL=C.UTF-8
    - git submodule update --init
    - meson . _build $BUILD_ARGS
    - ninja -C _build
    - ninja -C _build install

.before_script_debian: &before_script_debian
  - rm -f ../* || true
  - dpkg -l

.before_script_alpine: &before_script_alpine
  - apk -q add alpine-sdk
  - apk -q add $ALPINE_EDGE_DEPS

build-with-xwayland-debian-bookworm:
  stage: build
  image: ${DEBIAN_IMAGE}
  before_script: *before_script_debian
  variables:
     BUILD_ARGS: -Dembed-wlroots=disabled -Dxwayland=enabled -Db_coverage=true
  <<: *build
  artifacts:
    paths:
      - _build
  except:
    variables:
      - $PKG_ONLY == "1"

build-with-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dxwayland=enabled
  <<: *build
  allow_failure: true
  except:
    variables:
      - $PKG_ONLY == "1"

build-without-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dxwayland=disabled
  <<: *build
  allow_failure: true
  except:
    variables:
      - $PKG_ONLY == "1"


unit-test-with-xwayland-debian-bookworm:
  stage: test+docs
  image: ${DEBIAN_IMAGE}
  needs:
    - build-with-xwayland-debian-bookworm
  before_script: *before_script_debian
  script:
    - ${XVFB_RUN} meson test --print-errorlogs -C _build
    - ninja -C _build coverage
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'
  artifacts:
    when: always
    paths:
      - _build
  except:
    variables:
      - $PKG_ONLY == "1"

build-gtkdoc:
  stage: test+docs
  image: ${DEBIAN_IMAGE}
  before_script: *before_script_debian
  variables:
    BUILD_ARGS: -Dgtk_doc=true -Dembed-wlroots=disabled
  script:
    - git clean -dfx
    - 'echo "Build opts: ${BUILD_ARGS}"'
    - meson . _build $BUILD_ARGS
    - ninja -C _build || true
    - test -f _build/doc/phoc-*/index.html
    - mv _build/doc/phoc-*/ _reference/
  artifacts:
    paths:
      - _reference
  except:
    variables:
      - $PKG_ONLY == "1"

package-pureos-byzantium:arm64:
  variables:
    L5_DOCKER_IMAGE: pureos/byzantium
  tags:
    - aarch64
  extends: .l5-build-debian-package

package-pureos-byzantium:sanitizers:arm64:
  variables:
    L5_DOCKER_IMAGE: pureos/byzantium
    DEB_BUILD_PROFILES: 'pkg.phoc.embedwlroots pkg.phoc.sanitizers'
  tags:
    - aarch64
  when: manual
  extends: .l5-build-debian-package

pages:
  stage: deploy
  needs:
    - build-gtkdoc
  script:
    - mv _reference/ public/
  artifacts:
    paths:
      - public
  only:
    - master
